apiVersion: v1
kind: Service
metadata:
  name: test-app-secrets-provider-standalone
  labels:
    app: test-app-secrets-provider-standalone
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-secrets-provider-standalone
  type: {{ .Values.global.appServiceType }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-secrets-provider-standalone
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-app-secrets-provider-standalone
  name: test-app-secrets-provider-standalone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-secrets-provider-standalone
  template:
    metadata:
      labels:
        app: test-app-secrets-provider-standalone
    spec:
      serviceAccountName: test-app-secrets-provider-standalone
      containers:
      - image: {{ printf "%s:%s" .Values.app.image.repository .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        name: test-app
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        envFrom:
        - secretRef:
            name: test-app-secrets-provider-standalone-secret
      {{- if eq .Values.app.platform "kubernetes" }}
      imagePullSecrets:
        - name: dockerpullsecret
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      {{- end }}
